void chmod_file()
{
int ino,i;
INODE *temp;
MINODE *mino;
int dev=root->dev;
char *path;
path=parameter;
ino=getino(dev,path);
mino=iget(dev,ino);
temp=&mino->INODE;
__u16 mode=0x0000;


int a=0;
for(i=0;pathname[i];i++)
{
int t=(char)pathname[i]-48;

a=+t*(10^i);
if(i==0)
a=t;
printf("%d,",a);

}

printf("\nOld permission:%o,%d",temp->i_mode,a);

if(temp->i_mode&DIR_MODE==DIR_MODE)
{
printf("\nchanging for dir");

	temp->i_mode=DIR_MODE|mode;
}
if(temp->i_mode&FILE_MODE==FILE_MODE)
{

printf("changing for file");
	temp->i_mode=FILE_MODE|mode;
}
printf("\nPermission:,%o",temp->i_mode);
mino->dirty=1;
iput(mino);
}

void touch()
{
int ino;
INODE *temp;
MINODE *mino;
time_t t;
int dev=root->dev;
ino=getino(dev,pathname);
mino=iget(dev,ino);
temp=&mino->INODE;
ctime(&t);
temp->i_atime=ctime(&t);
temp->i_ctime=ctime(&t);
printf("\ntime is:%s",temp->i_atime);			
mino->dirty=1;
iput(mino);
}

void mystat()
{
int ino;
INODE *temp;
MINODE *mino;
//stat *st;
int dev=root->dev;
ino=getino(dev,pathname);
mino=iget(dev,ino);
temp=&mino->INODE;
/*st.st_dev=dev;
st.st_ino=ino;
st.st_mode=temp->i_mode;
st.st_uid=temp->i_uid;
st.st_gid=temp->i_gid;
st.st_size=temp->i_size;
st.st_blocks=temp->i_blocks;
st.st_nlink=temp->i_links_count;
st.st_atim=temp->i_atime;
st.st_mtim=temp->i_mtime;
st.st_ctim=temp->i_ctime;
//st(pathname,&st);*/
printf("\ndev:%d",dev);
printf("\nino is:%d",ino);
printf("\nmode is:%d",temp->i_mode);
printf("\nsize is:%d",temp->i_size);
printf("\nblocks is:%d",temp->i_blocks);
printf("\nnlink is:%d",temp->i_links_count);
printf("\ntime is:%d",temp->i_atime);
iput(minode);

}

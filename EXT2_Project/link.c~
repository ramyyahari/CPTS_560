int link() {
	char *temp=pathname;
	char *oldbasename = basename(pathname);
	char *oldname = dirname(temp);
	temp=parameter;	
	char *newbasename = basename(parameter);
	char *newname = dirname(temp);

	int cino = running->cwd->ino;
	int ino = running->cwd->ino;
	int odev = running->cwd->dev;
	int ndev = running->cwd->dev;

	if(oldname) {
		ino = getino(&odev, oldname);
	}

	MINODE *parent = iget(odev, ino);

	if(S_ISDIR(parent->INODE.i_mode)) {
		int tino = getino(parent->dev,oldbasename); 
		if(!tino) {
			iput(parent);
			printf("Specified file does not exist\n");
			return 0;
		} else {
			printf("REG file found with ino %d\n", tino);
		}

		MINODE *original = iget(odev, tino);

		if(newname) {
			
			cino = getino(&ndev, newname);
		}

		MINODE *newParent = iget(ndev, cino);
		if(S_ISDIR(newParent->INODE.i_mode)) {
			int nino = getino(newParent->dev,newbasename);
			if(!nino) {
				//we can create the hardlink
				enter_name(newParent, original->ino, newbasename);
				printf("Link created\n");
				original->INODE.i_links_count++;
				original->dirty++;
				printf("Original now has  %d links\n", original->INODE.i_links_count);
				iput(newParent);
				iput(original);
				iput(parent);
			} else {
				iput(newParent);
				iput(original);
				iput(parent);
			}
		} else {
			iput(newParent);
			iput(original);
			iput(parent);
			printf("Not a valid destination\n");
			return 0;
		}
	}

}
